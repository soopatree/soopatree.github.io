name: Bundle HTML, CSS, and JS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 수동으로 워크플로우를 실행할 수 있는 옵션

# GitHub Actions에 권한 부여
permissions:
  contents: read
  pages: write      # GitHub Pages 배포 권한
  id-token: write  # OIDC 토큰 생성 권한
  
# GitHub Pages 환경 설정
env:
  # 기본 환경을 'github-pages'로 설정
  GITHUB_PAGES_ENVIRONMENT: github-pages

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Create dist directory
      run: mkdir -p dist
      
    - name: Install imagemagick for favicon conversion
      run: sudo apt-get update && sudo apt-get install -y imagemagick
        
    - name: Create favicon.ico from SVG
      run: |
        # SVG를 PNG로 변환 (여러 크기)
        mkdir -p temp_favicon
        convert -background none -size 16x16 favicon.svg temp_favicon/favicon-16.png
        convert -background none -size 32x32 favicon.svg temp_favicon/favicon-32.png
        convert -background none -size 48x48 favicon.svg temp_favicon/favicon-48.png
        
        # PNG들을 하나의 ICO 파일로 통합
        convert temp_favicon/favicon-16.png temp_favicon/favicon-32.png temp_favicon/favicon-48.png dist/favicon.ico
        
        # SVG도 dist 디렉토리로 복사
        cp favicon.svg dist/
    
    - name: Bundle HTML, CSS, and JS files
      run: |
        # 간단한 Node.js 스크립트를 사용하여 파일 병합
        node -e "
          const fs = require('fs');
          
          // 파일 읽기
          const html = fs.readFileSync('index.html', 'utf8');
          const css = fs.readFileSync('style.css', 'utf8');
          const js = fs.readFileSync('script.js', 'utf8');
          
          // CSS와 JS 삽입
          let result = html.replace(
            '<link rel=\"stylesheet\" href=\"style.css\" />',
            '<style>' + css + '</style>'
          );
          
          result = result.replace(
            '<script src=\"script.js\"></script>',
            '<script>' + js + '</script>'
          );
          
          // 결과 저장
          fs.writeFileSync('dist/index.html', result);
          
          console.log('HTML, CSS, JS 파일을 성공적으로 번들링했습니다.');
        "
        
    - name: Upload bundled file as artifact
      uses: actions/upload-artifact@v4
      with:
        name: bundled-file
        path: dist/index.html
        
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist

  # 별도 작업으로 나누어 배포
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
